<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>算法基础</title>
      <link href="/2020/06/28/suan-fa-ji-chu/"/>
      <url>/2020/06/28/suan-fa-ji-chu/</url>
      
        <content type="html"><![CDATA[<h2 id="算法概览"><a href="#算法概览" class="headerlink" title="算法概览"></a>算法概览</h2><ol><li><p>数据结构：</p><ul><li>数组</li><li>链表</li><li>字符串</li><li>二叉树</li></ul></li><li><p>处理思路：</p><ul><li>基本数据结构，配合基本数学运算</li><li>高级点的，还需要考虑函数的递归调用模型，类似于高阶函数和数列</li><li>涉及循环或递归这些重复计算都需要考虑退出条件</li><li>算法的效率由时间复杂度和空间复杂度共同决定</li></ul></li><li><p>数值运算：</p><ul><li>最基本的是加法和减法，然后是乘法和除法</li><li>取模运算和整数除法</li><li>乘法和加法会造成数值溢出</li><li>最大值和最小值经常用于动态规划</li><li>位运算主要涉及移位操作，有左移和右移</li><li>不同的数据类型的精度不同</li><li>逻辑运算有与或非和异或</li></ul></li><li><p>经典算法：</p><ul><li>暴力求解</li><li>二分查找</li><li>遍历</li><li>双指针</li><li>递归</li><li>回溯</li><li>动态规划</li><li>分治</li><li>哈希</li><li>归并</li><li>位图</li><li>AVL树</li><li>KMP算法</li><li>Manacher算法</li></ul></li><li><p>回顾经典数学思想：</p><ul><li>函数与方程</li><li>分类与分解</li><li>数形结合</li><li>归纳与演绎</li><li>特殊到一般</li></ul></li></ol><h2 id="暴力求解"><a href="#暴力求解" class="headerlink" title="暴力求解"></a>暴力求解</h2><p>不计较算法的开销，采用直观的方式进行求解，枚举可能出现的每一种情况。该方法虽然执行效率低，但相对直观，有助于发现冗余，打开思路。需要注意的是，为了获得正确的结果，需要着重考虑不同的输入情形下对应的边界条件，防止溢出。</p><h2 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h2><p><img src="https://picabstract-preview-ftn.weiyun.com/ftn_pic_abs_v3/3c0d479710a8d4a08e55a0e6bcf26938a63ac4a553f912a458290ff0fd5f2d13490249bb474d50cd60c3dda32460155a?pictype=scale&from=30113&version=3.3.3.3&uin=695595369&fname=%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-06-28%2016.44.57.png&size=750" alt></p><blockquote><p>注意mid = low + (high - low)/2, 中间数一定位于low和high之间，不能用high+low计算，加起来的值会溢出。</p></blockquote><pre class=" language-java"><code class="language-java"><span class="token keyword">int</span> <span class="token function">binarySearch</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> A<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token keyword">int</span> low <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> high <span class="token operator">=</span> A<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>   <span class="token keyword">int</span> mid<span class="token punctuation">;</span>   <span class="token keyword">while</span><span class="token punctuation">(</span>low <span class="token operator">&lt;=</span> high<span class="token punctuation">)</span> <span class="token punctuation">{</span>       mid <span class="token operator">=</span> low <span class="token operator">+</span> <span class="token punctuation">(</span>high <span class="token operator">-</span> low<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>A<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">return</span> mid<span class="token punctuation">;</span>       <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>A<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">></span> target<span class="token punctuation">)</span><span class="token punctuation">{</span>           high <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>           low <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>   <span class="token punctuation">}</span>   <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><ol><li>举例：A = [0,1,2,3,4,5]<ul><li>初始化：low=0,high=5,mid=0,target=10;</li><li>1) mid=2, A[mid] &lt; target;</li><li>2) low=3,high=5,mid=4, A[mid] &lt; target;</li><li>3) low=5,high=5,mid=5,A[mid] &lt; target;</li><li>4) low=6,high=5,退出循环 return -1;</li></ul></li></ol><h2 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h2><blockquote><p>遍历：按照一定规则依次访问每一个元素。</p></blockquote><ol><li>数组遍历：最典型的场景是数组进行反转</li><li>链表遍历：配合双指针可以近似实现随机访问节点的目的</li><li>二叉树遍历：通过递归的方式访问每一个节点</li></ol><h2 id="双指针"><a href="#双指针" class="headerlink" title="双指针"></a>双指针</h2><blockquote><p>双指针：在循环遍历链表过程中通过快慢指针来记录当前访问的节点。</p></blockquote><ol><li>适用场景：<ul><li>访问链表的倒数第K个节点</li><li>访问链表的中间节点</li><li>检测单链表中是否有环</li></ul></li></ol><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><blockquote><p>递归：一类通用算法的代名词，本质是基于编程语言的函数的栈式调用结构。</p></blockquote><ol><li><p>递归的陷阱</p><ul><li>效率低，调用栈太深</li><li>容易溢出，边界条件不好控制</li></ul></li><li><p>递归的三大要素</p><ul><li>函数定义：明确函数的输入输出和功能定位，越简单越好</li><li>退出条件：发现递归结束条件，从最简单或最初始的状态入手</li><li>递归方程：自顶向下，发现递归式，从通用的范式入手<br>发现递归条件：可以理解为，从f(1)…正向推到f(n),从初始到无穷，从简单到一般。<br>发现递归式：即发现问题的本质，从通用着手，从f(n)…反推到f(1).</li></ul></li><li><p>场景：</p><ul><li>求阶乘，斐波那契数列</li><li>反转单链表</li><li>二叉树遍历</li></ul></li><li><p>递归的优化</p><blockquote><p>起因：子问题被重复计算。</p></blockquote><ul><li>备忘录：保存递归过程的中间计算结果</li><li>考虑是否可以自底向上的递推</li></ul></li></ol><h2 id="回溯"><a href="#回溯" class="headerlink" title="回溯"></a>回溯</h2><blockquote><p>回溯：back tracking，属于路径搜索算法中的一种，通过不断的去试错，控制路径的前进和后退来选取最终的目标。</p></blockquote><ol><li><p>经典问题</p><ul><li>01背包问题</li><li>8皇后问题</li></ul></li><li><p>回溯的陷阱</p><ul><li>可看作深度优先搜索</li><li>全搜索，复杂度高 </li></ul></li><li><p>设计思路</p></li></ol><pre><code>res = [];       全局变量 保存最终的结果state = [];     状态变量 保存当前的状态p,q,r;          条件变量 决定搜索是否满足条件back(状态，条件1, 条件2, ...) {    if(不满足条件则剪枝操作) {        return;    }else { 状态满足最终的要求        res.add(state);        return;    }    // 遍历每一个阶段的可选解    for 依次遍历和递归 {        if(满足执行条件) {            已选解集合.add(可选解)            back(状态，条件1, 条件2, ...);            已选解集合.remove(可选解)        }    }}最终从res中获取结果</code></pre><ol start="4"><li>适用场景<ul><li>排列、组合（子集、幂集、字符全排列）。 在传值时，对于排列问题，是要删掉单个用过的元素；组合问题，是删掉前面所有的元素。</li><li>数组、字符串，给定一个特定的规则，尝试搜索迭代找到某个解。</li><li>二维数组下的DFS搜索（八皇后、黄金矿工、数独）</li></ul></li></ol><h2 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h2><blockquote><p>自下向上，从简单到复杂，从特殊到一般。</p></blockquote><ol><li>基本属性<ul><li>最优子结构</li><li>重叠子问题</li></ul></li><li>突破点<ul><li>状态定义</li><li>状态迁移</li></ul></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java技术成长之路</title>
      <link href="/2019/08/13/grow-up-with-java/"/>
      <url>/2019/08/13/grow-up-with-java/</url>
      
        <content type="html"><![CDATA[<h2 id="从IF到FOR循环"><a href="#从IF到FOR循环" class="headerlink" title="从IF到FOR循环"></a>从IF到FOR循环</h2><h2 id="从增删查改到持久化工具"><a href="#从增删查改到持久化工具" class="headerlink" title="从增删查改到持久化工具"></a>从增删查改到持久化工具</h2><h2 id="从基本类型到集合框架"><a href="#从基本类型到集合框架" class="headerlink" title="从基本类型到集合框架"></a>从基本类型到集合框架</h2><h2 id="从多线程到线程池"><a href="#从多线程到线程池" class="headerlink" title="从多线程到线程池"></a>从多线程到线程池</h2><h2 id="从单应用到分布式"><a href="#从单应用到分布式" class="headerlink" title="从单应用到分布式"></a>从单应用到分布式</h2><h2 id="从IO到NIO"><a href="#从IO到NIO" class="headerlink" title="从IO到NIO"></a>从IO到NIO</h2><h2 id="从运营监控到JVM调优"><a href="#从运营监控到JVM调优" class="headerlink" title="从运营监控到JVM调优"></a>从运营监控到JVM调优</h2><h2 id="从一个人战斗到一个团队"><a href="#从一个人战斗到一个团队" class="headerlink" title="从一个人战斗到一个团队"></a>从一个人战斗到一个团队</h2><h2 id="从编程到系统"><a href="#从编程到系统" class="headerlink" title="从编程到系统"></a>从编程到系统</h2><h2 id="从系统到产品"><a href="#从系统到产品" class="headerlink" title="从系统到产品"></a>从系统到产品</h2>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Skill </tag>
            
            <tag> Coder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 前端项目规划思路</title>
      <link href="/2019/02/25/react-project/"/>
      <url>/2019/02/25/react-project/</url>
      
        <content type="html"><![CDATA[<h1 id="Create-react-app-的使用"><a href="#Create-react-app-的使用" class="headerlink" title="Create-react-app 的使用"></a>Create-react-app 的使用</h1><h1 id="引入-React-Router-4-路由"><a href="#引入-React-Router-4-路由" class="headerlink" title="引入 React Router 4 路由"></a>引入 React Router 4 路由</h1><h1 id="安装基本依赖"><a href="#安装基本依赖" class="headerlink" title="安装基本依赖"></a>安装基本依赖</h1><h1 id="规划工程目录"><a href="#规划工程目录" class="headerlink" title="规划工程目录"></a>规划工程目录</h1><h1 id="引入-Redux-全局状态管理"><a href="#引入-Redux-全局状态管理" class="headerlink" title="引入 Redux 全局状态管理"></a>引入 Redux 全局状态管理</h1><h1 id="安装-Chrome-调试插件"><a href="#安装-Chrome-调试插件" class="headerlink" title="安装 Chrome 调试插件"></a>安装 Chrome 调试插件</h1><h1 id="路由规划"><a href="#路由规划" class="headerlink" title="路由规划"></a>路由规划</h1><h1 id="Just-write-now"><a href="#Just-write-now" class="headerlink" title="Just write now"></a>Just write now</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS判断</title>
      <link href="/2019/02/16/js-judge/"/>
      <url>/2019/02/16/js-judge/</url>
      
        <content type="html"><![CDATA[<blockquote><p>情景1: 如何判断一个对象是否有某成员？如let user = {}; user.username ?</p></blockquote><blockquote><p>情景2: 如何判断一个变量是数值类型？userId = 1;</p></blockquote><blockquote><p>情景3: 如何判断空数组？ users = []</p></blockquote><blockquote><p>情景4: 如何判断数组的长度为1？</p></blockquote><blockquote><p>情景5: 如何从对象树中取值？</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ThreadLocal-优雅写法</title>
      <link href="/2019/01/26/java-threadlocal/"/>
      <url>/2019/01/26/java-threadlocal/</url>
      
        <content type="html"><![CDATA[<h1 id="什么时候使用ThreadLocal"><a href="#什么时候使用ThreadLocal" class="headerlink" title="什么时候使用ThreadLocal"></a>什么时候使用ThreadLocal</h1><p>先看一段代码：</p><pre class=" language-Java"><code class="language-Java">// ThreadLocalDemo.javapublic class ThreadLocalDemo {    public static void main(String[] args){        // 启动多个线程，每一个线程里可能涉及多个实例之间交互        for(int i=0;i<2;i++){            new Thread(                @Override                public void run(){                    int data = new Random.nextInt();                    // 设置当前线程共享的信息                    MyThreadScopeData.getInstance.setName("name" + data);                    MyThreadScopeData.getInstance.setAge("age" + data);                    // 其他业务逻辑                    // 获取当前线程共享的信息                    new A().get();                    new B().get();                }            ).start();        }    }}static class A {    public void get(){        MyThreadScopeData data = MyThreadScopeData.getInstance();        System.out.println("from " + data.getName() + "," + data.getAge());    }}static class B {    public void get(){        MyThreadScopeData data = MyThreadScopeData.getInstance();        System.out.println("from " + data.getName() + "," + data.getAge());    }}/** * 通过ThreadLoacal 存储当前线程的实例变量。 * 这里的变量仅与当前线程相关的，即专门与线程绑定的。 * 这意味着在当前线程的任意地方调用,得到的都是同一个实例变量。 * 不同线程的变量之间互不影响。**/class MyThreadScopeData {    private MyThreadScopeData(){}    private static ThreadLocal<MyThreadScopeData> map = ThreadLocal<MyThreadScopeData>();    public static MyThreadScopeData getInstance(){        MyThreadScopeData instance = map.get();        if(instance == null){            instance = new MyThreadScopeData();            map.set(instance);        }        return instance;    }    // 属于当前线程的变量    private String name;    private String age;    public String getName(){        return name;    }    public String getAge(){        return age;    }    public void setName(String name){        this.name = name;    }    public void setAge(String age){        this.age = age;    }}</code></pre><h1 id="ThreadLocal-提供的方法"><a href="#ThreadLocal-提供的方法" class="headerlink" title="ThreadLocal 提供的方法"></a>ThreadLocal 提供的方法</h1><blockquote><p>参考 JAVA 8 API <a href="https://docs.oracle.com/javase/8/docs/api/" target="_blank" rel="noopener">https://docs.oracle.com/javase/8/docs/api/</a></p><pre><code>// 定义public class ThreadLocal&lt;T&gt; extends Object</code></pre></blockquote><p>/**</p><ul><li>Return the current thread’s “initial value” for this thread-local variable.</li><li>This implementation simply returns null.<br>**/<br>protected T initialValue()</li></ul><p>/**</p><ul><li>Return the value in the current thread’s copy of this thread-local variable.<br>**/<br>public T get()</li></ul><p>/**</p><ul><li>Set the current thread’s copy of this thread-local variable to the specified value.<br>**/<br>public void set(T value)</li></ul><p>/**</p><ul><li>Remove the current thread’s value for this thread-local variable.<br>**/<br>public void remove()</li></ul><pre><code># 有哪些应用情景Struts 2 中每一请求过来，都会有一个对应的线程进行处理，每一个线程内都会通过ThreadLocal的方式维护一个容器，用于存储线程上下文的变量。# 总结1. Threadlocal 本质是一个map，每一个线程都会对应map中的一条记录。2. map的key值就是当前线程，因此get()和set()方法都不需要传key值。3. 如果有多个变量需要在线程范围内共享，要么定义多个ThreadLocal对象，要么将需要共享的变量封装成一个对象，然后存到Threadlocal中。待完善。</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hive中大表Join大表的优化</title>
      <link href="/2019/01/23/hive-big-table-join/"/>
      <url>/2019/01/23/hive-big-table-join/</url>
      
        <content type="html"><![CDATA[<h1 id="Join模型"><a href="#Join模型" class="headerlink" title="Join模型"></a>Join模型</h1><pre><code>select     A.a    B.bfrom Ajoin B on A.a_id = B.b_id</code></pre><h1 id="处理思路"><a href="#处理思路" class="headerlink" title="处理思路"></a>处理思路</h1><ol><li>先过滤A和B，减少Join的表的数据量</li><li>既然on 条件导致的数据倾斜，那么试图改造Join的条件</li><li>分而治之，基于数据的统计规律，单独处理倾斜的数据和均匀的数据，最后Union All在一起</li></ol><h1 id="数据倾斜对性能影响有多大？"><a href="#数据倾斜对性能影响有多大？" class="headerlink" title="数据倾斜对性能影响有多大？"></a>数据倾斜对性能影响有多大？</h1><h1 id="如何分别从物理存储和查询SQL上进行优化？"><a href="#如何分别从物理存储和查询SQL上进行优化？" class="headerlink" title="如何分别从物理存储和查询SQL上进行优化？"></a>如何分别从物理存储和查询SQL上进行优化？</h1><h1 id="能否定期稽核或监控这种数据倾斜？"><a href="#能否定期稽核或监控这种数据倾斜？" class="headerlink" title="能否定期稽核或监控这种数据倾斜？"></a>能否定期稽核或监控这种数据倾斜？</h1><p>待完成。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>单一职责原则的思考</title>
      <link href="/2018/11/15/thinking-for-single-responsibility-principle/"/>
      <url>/2018/11/15/thinking-for-single-responsibility-principle/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是单一职责原则"><a href="#什么是单一职责原则" class="headerlink" title="什么是单一职责原则"></a>什么是单一职责原则</h2><p>单一职责原则，是面向对象设计的基本原则之一，易于理解，且十分受用。官方对此理解为：一个类应该有且只有一个变化的原因。当有多个原因导致类发生变化时，这意味着可以通过设计新的类来体现这种变化，而不是让一个已有的类变得臃肿。重新思考我们的类，让已有的类尽可能的简单化，是迭代开发中一个必要的环节。</p><p>单一职责，追求的是简单明确的设计，强调的是分工明确，职责简单。这种设计，不局限于类的设计，可以扩展到任何一个程序逻辑单元的设计，如函数的设计，模块的设计，工程的设计，项目的设计，集群的设计等。</p><p>单一职责的核心可以理解为：化整为零，将整体分解为局部的逻辑单元，不同的逻辑单元之间尽可能的相对独立，并且职责明确。例如，一个项目，可以分解为多个工程；一个工程，可以分解为多个模块；一个模块，可以分解为多个包和类；一个类，可以分解为多个属性和方法行为。设计层面的分解，可以对应到具体实现层面的分离。下面以Java Web项目为例，从分离的角度，分享对单一职责原则的思考。</p><h2 id="前后端分离"><a href="#前后端分离" class="headerlink" title="前后端分离"></a>前后端分离</h2><p>在早起的Java Web开发中，MVC是一种经典的分层设计思路。通过将模型、控制和视图进行分层，不同的开发者可以专注于他们擅长的领域，如前端开发者可以专注于视图，后端开发者可以专注于逻辑控制，数据库设计者可以专注于底层数据模型的设计，层与层之间只要约定好接口和规范，就可以顺利的进行协作开发。但这样也有一个问题，模型、控制和视图这三者必须同时运行起来，整个Web工程才可以正常的启动，这对于开发调试和部署的代价都是很大的。本质上讲，视图层的职责就是负责数据的展示，不关心数据从哪里来以及数据如何加工处理。而控制层的职责是处理外部的请求并给出响应，专注于内容而不是内容的表现形式。至于模型层，其职责主要是管理持久化的数据，而并不关心数据要如何被使用。</p><p>因此从职责上讲，这三者可以认为是独立的，既然是独立的，那么能否进行独立的部署呢？答案是可以的，独立的部署，意味着在开发前端视图时，并不依赖于后端的服务，只需要专注于界面的开发即可。对于后端，只需要专注于数据服务和业务逻辑。在具体实现上，前端可以基于Node.js，Webpack或者React 组件进行开发，后端可以基于Spring Boot的微服务架构进行开发，两边通过Restful API 进行数据的交互，且独立开发和部署。这样，将一个Java Web 项目分拆为两个工程，通过前后端分离，将给开发和维护带来很大的便利。</p><h2 id="接口与实现分离"><a href="#接口与实现分离" class="headerlink" title="接口与实现分离"></a>接口与实现分离</h2><p>接口和实现的分离，是Java语言倡导的基本设计哲学，通过interface和class关键字就可以搞定。从单一职责的角度来讲，接口的职责就是定义对外的服务，既然是对外，那么所有的常量和方法都是public的，因此在定义接口的服务时，建议不需要带上public关键字，而专注于服务的名称和参数设计。接口可以理解为一种契约，一种协议，在此协议下，针对不同的场景，可以有不同的实现方式。协议，即签名，它是通过接口的方式定义的，接口要做的，是保证提高稳定可靠的服务，而具体的实现，交给实现类去完成就好了。从单一职责的角度，实现类的职责就是专注于接口的方法实现，换言之，如果实现类中有公共的public方法，那么最好都是接口中声明的，即@Override注解。不建议在实现类中暴露额外的public方法，如果不得不这么做，可以重新思考接口的设计，而不是实现类本身。</p><p>实现类的职责很简单，就是为了实现而实现。如果不遵从接口的定义而开放过多的public方法，这将使得类的设计变得混乱，后期不利于扩展和维护。接口和实现分离的案例有很多，如Web开发中经常遇见的service层和对应的ServiceImpl实现类，当需要新增一个action去处理请求时，首先考虑的不是action如何写，而是应该如何通过接口去定义服务。</p><h2 id="业务与系统分离"><a href="#业务与系统分离" class="headerlink" title="业务与系统分离"></a>业务与系统分离</h2><p>业务与系统的分离，是基于这样的一个事实：如果把一个Java Web工程看作一个应用系统，那么在面向业务的同时，它还有一个职责是服务于系统自身。简单的说，应用系统既要面向复杂灵活的业务，又得保持自身的稳定性、扩展性，可维护性等。从开发的角度，这意味着有些代码是用于自身配置的，如权限管控，公共工具，服务器配置，路由网关，负载均衡，RPC等，而有些代码是用于处理业务的，如查询第三方的业务库获取数据，如按照业务规则进行文件的转换等。如果不留意，随着工程代码量的增加，渐渐的会发现，业务相关的代码和系统相关的代码都糅合在一起，这将严重影响代码的质量，以至于变得不可维护。从本质上来讲，业务相关的东西是与系统本身无关的，是外界的，是不可控的，这意味这类代码需要设计的尽可能灵活。保证灵活性的一个有效途径就是让代码尽可能的职责单一，即无侵入式设计。有一个简单的方法可以检测这种设计：理想情况下将所有业务相关的代码放在一个包或一个模块中，如果直接移除这个包或模块而不影响整个工程的运行，说明满足了业务与系统的分离。</p><p>在具体的工程实现中，与业务相关的代码可以放在独立的包或模块中，而对于易变的业务，可以采用脚本语言编写，如Python，Shell，然后运行时调用即可。编程语言都有着各自的优势和不足，在处理易变的业务规则方面，脚本语言相比于强编译型语言，显得更灵活更便捷。</p><h2 id="公共与逻辑分离"><a href="#公共与逻辑分离" class="headerlink" title="公共与逻辑分离"></a>公共与逻辑分离</h2><p>公共与逻辑的分离，讲究的是不要把本可以抽离出的公共对象，放在逻辑处理的代码中。从单一职责的角度讲，公共对象就好比日常中的小工具一样，它们彼此间相互独立，它的职责就是提供逻辑处理上的帮助。对于公共的东西，往往会多个地方会用到，即拥有全局的作用域。从实现的角度，静态类，静态方法，外部配置文件等，都可以用于描述公共对象。而逻辑，通常指的是为了实现某个功能的代码片段，对于逻辑代码，无权也并不需要维护公共对象的定义和值域，只要使用好即可。</p><p>在一个Java Web工程中，往往会涉及许多的逻辑代码，久而久之产生了许多的配置项和公共工具类，如处理字符编码，中文转拼音，Json返回值模板，邮件正文模板，数据库配置，缓存配置，Web服务器配置，本地路径配置等。</p><h2 id="开发与生产分离"><a href="#开发与生产分离" class="headerlink" title="开发与生产分离"></a>开发与生产分离</h2><p>单一职责原则，还体现在开发与生产的分离。在开发环境下，我们首先考虑的是方便开发，方便代码调试。在生产环境下，我们需要尽量保持代码简洁，加载性能最优，稳定性和可靠性显得尤为重要。为此，对于开发者，在后台服务方面，比如可以引入Maven来管理依赖，可以引入内嵌的Tomcat来充当Web服务器，可以引入H2这样的内存数据库来做数据的持久化，可以引入devtools进行应用程序的自动重启。在前端开发方面，比如可以引入webpack-dev-server进行热部署，可以引入Babel进行ES6语法的转译，可以引入Eslint进行JS语法检查，等等。当进行生产环境部署时，可能需要一些额外的参数的配置，这些配置不同于开发环境下的配置，如数据库连接信息，并发控制，网络，IP等。</p><p>Spring Boot的自动配置非常的灵活，可以针对开发和生产环境进行相应的条件配置。在前端的开发中，如果使用了Webpack打包工具，也可以独立的配置开发环境和生产环境的参数，比如在开发环境，可以相应的配置模块热替换，代码映射等功能，便于开发和调试；在生产环境，可以相应的配置代码压缩、模块拆分等，尽可能的减少前端文件的大小，从而减轻浏览器加载的压力。总之，从开发到生产，是十分严肃的事情，开发和生产的分离显得尤为必要。</p><h2 id="数据模型和处理分离"><a href="#数据模型和处理分离" class="headerlink" title="数据模型和处理分离"></a>数据模型和处理分离</h2><p>数据模型和数据处理，几乎在所有的Java Web应用中都有所涉及。数据模型，侧重于数据的定义和组织，而数据处理，侧重的是数据的使用和交互。至于数据的管理，则需要同时关注数据模型和数据处理。数据模型层面，涉及日常的数据更新和维护；数据处理层面，涉及读写操作的控制。读写控制，可以有两种思路实现，一种是代码级别做处理，具体可以表现为，将涉及读和写操作的业务代码做进一步分解，分别处理读和写。另一种思路是在数据库层进行一定的约束，提供不同读写权限的数据库用户给应用层使用。</p><p>在现有的主流框架体系中，数据模型和数据处理大体上都是分离的，这种分离的处理方式不单单指的是Bean层和DAO层的分离，还可以用到其他的POJO对象实体中。业务对象（BO）往往对应着业务数据库的实体，持久化对象（PO）的范围更大，不限于业务对象，还可以是系统本身配置用到的对象等，值对象（VO）通常用于业务层之间的数据传递，如可以用来定义RESTful API的JSON响应实体，可以用来定义不同业务之间的消息实体等。在数据处理过程中，不涉及数据模型等定义，如确实有需要，考虑到其他类不使用的情况下，可以通过内部类的方式实现。总之，模型和处理的职责都很明确，一个专注于数据结构的定义，一个专注于优雅的算法处理。</p><p>最后，用一句话来诠释单一职责原则：专注成就卓著。欢迎一起交流探讨。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Design Pattern </tag>
            
            <tag> SRP </tag>
            
            <tag> Java Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何闭环的完成阶段性的工作</title>
      <link href="/2018/11/04/how-closed-loop-done/"/>
      <url>/2018/11/04/how-closed-loop-done/</url>
      
        <content type="html"><![CDATA[<h2 id="未雨绸缪"><a href="#未雨绸缪" class="headerlink" title="未雨绸缪"></a>未雨绸缪</h2><blockquote><p>不要急着开始做，想明白需要做什么以及如何做。</p></blockquote><h2 id="有始有终"><a href="#有始有终" class="headerlink" title="有始有终"></a>有始有终</h2><blockquote><p>再小的事情也不要忘了结束。</p></blockquote><h2 id="谨小慎微"><a href="#谨小慎微" class="headerlink" title="谨小慎微"></a>谨小慎微</h2><blockquote><p>小问题随处可见，为什么要轻易忽视呢。</p></blockquote><h2 id="连续作业"><a href="#连续作业" class="headerlink" title="连续作业"></a>连续作业</h2><blockquote><p>任务开始了，就需要一根到底，直到关闭任务。</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>如何有效的积累</title>
      <link href="/2018/11/04/how-to-accumulate/"/>
      <url>/2018/11/04/how-to-accumulate/</url>
      
        <content type="html"><![CDATA[<p>问题，是会源源不断的变得更多。积累，需要的是持续有效的进行。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac Terminal管理工具介绍</title>
      <link href="/2018/10/04/mac-terminal-tool-introduction/"/>
      <url>/2018/10/04/mac-terminal-tool-introduction/</url>
      
        <content type="html"><![CDATA[<blockquote><blockquote><p>想要解决的问题：如何知道自己Mac上安装了哪些工具，以及这些工具在哪里，如何使用工具等。</p></blockquote></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>Mac 系统的文件目录结构<ul><li>Finder：个人文档的目录和个人安装的GUI程序，不涉及操作系统层面；</li><li>Console：默认为个人文档目录，可以进入根目录进行操作</li><li>根目录 /：归属 root 用户</li></ul></li></ol><pre><code> |- /   |- Applications  用户软件   |- Library  系统资源库   |- Network    |- System  系统软件   |- Users  用户专有资源   |- Volumes  文件系统挂载点   |- bin  Unix命令   |- cores  内核转存文件   |- data  mongodb数据库目录，用户自定义   |- dev  设备文件   |- etc -&gt; private/etc  系统配置文件   |- home  空，无用   |- installer.failurerequests   |- net  空，无用   |- private  内存镜像   |- sbin  系统管理命令   |- tmp -&gt; private/tmp  系统暂存档   |- usr  unix software resources，第三方程序安装目录   |- var -&gt; private/var  变化的文件</code></pre><blockquote><p>理解 /usr 目录</p><ul><li>/usr/bin : 所有可执行文件，如 gcc，firefox 等（指不包含在 /sbin 和 /bin 内的）</li><li>/usr/share : 它包含了各种程序间的共享文件</li><li>/usr/sbin : 类似 /sbin，root 可以执行。但此目录不包含在环境变量 $PATH 中</li><li>/usr/include : 各种头文件，编译文件等时需要使用</li><li>/usr/lib : 所有可执行文件所需要的库文件</li><li>/usr/local : 主要存放那些手动安装的软件</li><li>/usr/local/opt：大型软件的安装目录</li></ul></blockquote><ol start="2"><li><p>环境变量</p><pre class=" language-python"><code class="language-python">env  查看环境变量cat <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>bash_profile  自定义用户级的环境变量cat <span class="token operator">/</span>etc<span class="token operator">/</span>paths  系统级的环境变量，不可修改cat <span class="token operator">/</span>etc<span class="token operator">/</span>paths<span class="token punctuation">.</span>d<span class="token operator">/</span>xxx  系统级环境变量<span class="token punctuation">,</span>应用程序相关</code></pre></li><li><p>使用Homebrew安装工具</p></li></ol><ul><li>Homebrew: Mac操作系统下的软件包管理工具  </li><li>基本功能；安装、卸载、查看、更新、搜索</li><li>命令：<ul><li>显示所有已安装：brew list</li><li>安装：brew install git</li><li>卸载：brew uninstall git</li><li>搜索：brew search git</li><li>更新：brew update git</li><li>查看：brew info git</li></ul></li></ul><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><ul><li>Git: 版本管理和代码下载工具</li><li>基本功能：管理代码库</li><li>概念：工作区、暂存区、本地仓库、远程仓库</li><li>6大基本命令：<ul><li>add：增加文件到暂存区</li><li>commit：提交变化到本地仓库</li><li>push：提交到远程分支</li><li>fetch/clone：从远程分支下载</li><li>checkout：撤销和恢复</li><li>pull：取回远程仓库的变化与本地合并</li></ul></li></ul><h2 id="SVN"><a href="#SVN" class="headerlink" title="SVN"></a>SVN</h2><ul><li>SVN：局域网内的版本控制工具</li><li>概念：项目仓库、工作拷贝、操作文件、标签、分支、合并</li></ul><h2 id="Ant"><a href="#Ant" class="headerlink" title="Ant"></a>Ant</h2><ul><li>Ant：工程自动化构建工具</li></ul><h2 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h2><ul><li>Maven：项目依赖管理工具</li></ul><h2 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h2><ul><li>NodeJS依赖包管理工具</li></ul><blockquote><p>Mac上如何通过命令行卸载程序？</p><ul><li>Mac上删除程序即卸载程序，注意同时检查环境变量是否残余</li><li>查看命令的安装路径：<ul><li>which mvn</li><li>对于软连接，可以通过ls命令查看真实的路径：ls -l /usr/local/bin/mvn </li></ul></li></ul></blockquote><h2 id="命令行快捷键"><a href="#命令行快捷键" class="headerlink" title="命令行快捷键"></a>命令行快捷键</h2><pre><code>Tab               自动补全Ctrl+A            跳到行首（达到Home键的效果）Ctrl+E            跳到行尾（达到End键的效果）option+左方向      跳到当前单词开头option+右方向      跳到当前单词结尾Ctrl+R            搜索历史命令history           查看命令行历史记录!$                最后键入的参数!!                最后键入的命令</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Idea 开发工具使用</title>
      <link href="/2018/08/13/idea-for-java/"/>
      <url>/2018/08/13/idea-for-java/</url>
      
        <content type="html"><![CDATA[<blockquote><p>待完成。</p></blockquote><p>重构是开发过程中必不可少的环节，是提高工程质量的关键。</p><h1 id="Idea-Refactor的使用"><a href="#Idea-Refactor的使用" class="headerlink" title="Idea Refactor的使用"></a>Idea Refactor的使用</h1><h1 id="什么时候需要重构"><a href="#什么时候需要重构" class="headerlink" title="什么时候需要重构"></a>什么时候需要重构</h1><h1 id="如何进行重构"><a href="#如何进行重构" class="headerlink" title="如何进行重构"></a>如何进行重构</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JPA用于数据持久化</title>
      <link href="/2018/08/13/jpa-mapping-for-data/"/>
      <url>/2018/08/13/jpa-mapping-for-data/</url>
      
        <content type="html"><![CDATA[<p>能不用程序员写的，尽量不用程序员去写。</p><p>规范约束和灵活配置中寻找平衡。</p><p>专注于数据和业务逻辑。</p><h1 id="默认的数据库"><a href="#默认的数据库" class="headerlink" title="默认的数据库"></a>默认的数据库</h1><h1 id="默认的表名"><a href="#默认的表名" class="headerlink" title="默认的表名"></a>默认的表名</h1><h1 id="默认的字段名"><a href="#默认的字段名" class="headerlink" title="默认的字段名"></a>默认的字段名</h1><h1 id="默认的数据操作方法"><a href="#默认的数据操作方法" class="headerlink" title="默认的数据操作方法"></a>默认的数据操作方法</h1><h1 id="基于注解的配置"><a href="#基于注解的配置" class="headerlink" title="基于注解的配置"></a>基于注解的配置</h1><blockquote><p>如何从Java类映射到数据库的结构化数据?</p></blockquote><ol><li>实体类</li><li>成员变量</li><li>成员关系</li><li>CRUD操作</li><li>自定义查询</li><li>参数传递</li></ol><blockquote><p>待完成。</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SVN工具用于本地版本管理</title>
      <link href="/2018/08/13/svn-for-coder/"/>
      <url>/2018/08/13/svn-for-coder/</url>
      
        <content type="html"><![CDATA[<h1 id="SVN是什么"><a href="#SVN是什么" class="headerlink" title="SVN是什么"></a>SVN是什么</h1><p>SVN是Subversion的简称，即版本控制系统。</p><p>首先，SVN不仅可用于代码版本的管理，还可以用于项目资源的管理。本质上，SVN会在本地提供一个公共的共享仓库，仓库用于存放资源，资源以文件的方式表示，并且这些文件都是有状态的，状态通过版本号来标识。只要有需要，任何人在任何时间都可以获取到仓库里的任何历史版本的资源。SVN的一个实际用途是在团队内进行项目资源的管理，将项目涉及的所有资料、文档以及代码等都放在一个项目目录下，这样，在项目开展过程中，可以很方便的管理项目相关的文件，且便于不同成员之间进行资源的分享。比如，从项目管理的角度，SVN的文件夹可以如下进行创建：</p><pre><code>- Project_Name  |--- 01_需求分析    |--- 业务相关    |--- 技术相关    |--- 产品相关    |--- Readme.md  |--- 02_开发阶段    |--- 环境准备    |--- 数据模型    |--- 第三方服务    |--- 工程源码    |--- Readme.md  |--- 03_测试阶段    |--- 第一轮测试_YYMMDD    |--- 第二轮测试_YYMMDD    |--- 第三轮测试_YYMMDD    |--- Readme.md  |--- 04_上线阶段    |--- 源码发布    |--- 上线计划    |--- Readme.md   |--- 05_文档输出    |--- Readme.md</code></pre><p>这里关注的问题是，SVN如何有效的用到实际项目开发过程中呢？</p><h1 id="SVN有哪些实用的功能"><a href="#SVN有哪些实用的功能" class="headerlink" title="SVN有哪些实用的功能"></a>SVN有哪些实用的功能</h1><ol><li>文件共享</li><li>代码同步</li><li>协作开发</li><li>版本回退</li></ol><h1 id="协作开发和分支合并"><a href="#协作开发和分支合并" class="headerlink" title="协作开发和分支合并"></a>协作开发和分支合并</h1><ol><li>主线和分支</li><li>开发者权限</li><li>分支合并</li></ol><h1 id="版本恢复和回退"><a href="#版本恢复和回退" class="headerlink" title="版本恢复和回退"></a>版本恢复和回退</h1><ol><li>代码更新</li><li>版本回退</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Maven工具用于项目构建和规划</title>
      <link href="/2018/08/13/maven-elegant-project/"/>
      <url>/2018/08/13/maven-elegant-project/</url>
      
        <content type="html"><![CDATA[<blockquote><p>待完成。</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>（三）Hadoop笔记：Hadoop分布式集群搭建</title>
      <link href="/2018/07/27/hadoop-learn-03/"/>
      <url>/2018/07/27/hadoop-learn-03/</url>
      
        <content type="html"><![CDATA[<h1 id="Hadoop安装环境准备"><a href="#Hadoop安装环境准备" class="headerlink" title="Hadoop安装环境准备"></a>Hadoop安装环境准备</h1><p>安装Hadoop分布式集群，对于操作系统，有一些前置条件需要满足。</p><h2 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h2><pre class=" language-bash"><code class="language-bash">查看是否安装java –version解压缩jdk安装包<span class="token function">tar</span> -zxvf jdk-8u171-linux-x64.tar.gz -C /opt/modules配置环境变量<span class="token function">vi</span> /etc/profile<span class="token function">export</span> JAVA_HOME<span class="token operator">=</span><span class="token string">"/opt/modules/jdk1.8.0_171"</span><span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$JAVA_HOME</span>/bin:<span class="token variable">$PATH</span>修改生效<span class="token function">source</span> /etc/profile</code></pre><h2 id="静态IP和主机"><a href="#静态IP和主机" class="headerlink" title="静态IP和主机"></a>静态IP和主机</h2><p>检查各机器是否配置静态IP，且在hosts文件中配置IP和主机名映射。</p><h2 id="免密码登陆"><a href="#免密码登陆" class="headerlink" title="免密码登陆"></a>免密码登陆</h2><p>检查是否可以在每一个节点上通过ssh免密码登陆到别等节点。</p><h2 id="端口访问权限"><a href="#端口访问权限" class="headerlink" title="端口访问权限"></a>端口访问权限</h2><p>检查防火墙是否关闭，或使用firewall-cmd相关命令开启端口访问。</p><h2 id="集群时钟同步"><a href="#集群时钟同步" class="headerlink" title="集群时钟同步"></a>集群时钟同步</h2><h1 id="Hadoop配置和服务安装"><a href="#Hadoop配置和服务安装" class="headerlink" title="Hadoop配置和服务安装"></a>Hadoop配置和服务安装</h1><h2 id="Hadoop配置"><a href="#Hadoop配置" class="headerlink" title="Hadoop配置"></a>Hadoop配置</h2><p>解压Hadoop安装包到指定目录/opt/modules/下，并做相应的配置。</p><ol><li>配置JDK路径<br>修改hadoop-env.sh、mapred-env.sh、yarn-env.sh文件中的JDK路径<pre class=" language-bash"><code class="language-bash"><span class="token function">export</span> JAVA_HOME<span class="token operator">=</span><span class="token string">"/opt/modules/jdk1.8.0_171"</span></code></pre></li><li>配置core-site.xml</li></ol><p>进入Hadoop安装目录下： vi etc/hadoop/core-site.xml</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>fs.defaultFS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://cluster01.kwp.com:8020<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hadoop.tmp.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/opt/modules/hadoop-2.6.0/data/tmp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre><p>说明：</p><ul><li>fs.defaultFS为NameNode的地址</li><li>hadoop.tmp.dir为hadoop临时目录，需提前创建</li></ul><ol start="3"><li>配置hdfs-site.xml</li></ol><p>进入Hadoop安装目录下： vi etc/hadoop/hdfs-site.xml</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.namenode.secondary.http-address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>cluster03.kwp.com:50090<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.permissions<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre><p>说明：</p><ul><li>dfs.namenode.secondary.http-address 备用的NameNode</li><li>dfs.permissions=false 关闭访问权限，供外部程序访问</li></ul><ol start="4"><li>配置slaves</li></ol><p>进入Hadoop安装目录下： vi etc/hadoop/slaves</p><pre class=" language-xml"><code class="language-xml">cluster01.kwp.comcluster02.kwp.comcluster03.kwp.com</code></pre><ol start="5"><li>配置yarn-site.xml</li></ol><p>进入Hadoop安装目录下： vi etc/hadoop/yarn-site.xml</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.aux-services<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>mapreduce_shuffle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.resourcemanager.hostname<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>cluster02.kwp.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.log-aggregation-enable<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.log-aggregation.retain-seconds<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>106800<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.resourcemanager.webapp.address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>cluster02.kwp.com:8088<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.resourcemanager.address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>cluster02.kwp.com:8032<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.resourcemanager.scheduler.address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>cluster02.kwp.com:8030<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.resourcemanager.resource-tracker.address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>cluster02.kwp.com:8031<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre><ol start="6"><li>配置mapred-site.xml</li></ol><p>进入Hadoop安装目录下： vi etc/hadoop/mapred-site.xml</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.framework.name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>yarn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.jobhistory.address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>cluster01.kwp.com:10020<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.jobhistory.webapp.address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>cluster01.kwp.com:19888<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre><blockquote><p>上面配置在一个节点完成后，下一步需要通过scp命令把当前配置好的Hadoop包分发到其他节点。另外，由于是虚拟机环境，也可以通过克隆虚拟机的方式，直接克隆两外两个节点主机，而后修改相应的静态IP以及主机名。</p></blockquote><h2 id="服务安装"><a href="#服务安装" class="headerlink" title="服务安装"></a>服务安装</h2><p>结合节点规划，依次安装相应的服务。</p><table><thead><tr><th align="left">节点</th><th align="left">主机名</th><th align="left">服务项</th></tr></thead><tbody><tr><td align="left">节点1</td><td align="left">cluster01.kwp.com</td><td align="left">NameNode, DataNode,Nodemanager, HistoryServer</td></tr><tr><td align="left">节点2</td><td align="left">cluster02.kwp.com</td><td align="left">ResourceManager, DataNode,Nodemanager</td></tr><tr><td align="left">节点3</td><td align="left">cluster03.kwp.com</td><td align="left">SecondaryNameNode, DataNode,Nodemanager</td></tr></tbody></table><h2 id="HDFS"><a href="#HDFS" class="headerlink" title="HDFS"></a>HDFS</h2><pre class=" language-bash"><code class="language-bash">查看HDFS上的目录hdfs dfs -ls /在HDFS上建立目录hdfs dfs -mkdir /out上传文件到HDFShdfs dfs -put local_file hdfs_dir显示HDFS上的文件内容hdfs dfs -cat hdfs_file</code></pre><h2 id="NameNode和SecondNameNode"><a href="#NameNode和SecondNameNode" class="headerlink" title="NameNode和SecondNameNode"></a>NameNode和SecondNameNode</h2><h2 id="DataNode和Nodemanager"><a href="#DataNode和Nodemanager" class="headerlink" title="DataNode和Nodemanager"></a>DataNode和Nodemanager</h2><h2 id="ResourceManager和Yarn"><a href="#ResourceManager和Yarn" class="headerlink" title="ResourceManager和Yarn"></a>ResourceManager和Yarn</h2><h2 id="HistoryServer"><a href="#HistoryServer" class="headerlink" title="HistoryServer"></a>HistoryServer</h2><h2 id="NameNode格式化"><a href="#NameNode格式化" class="headerlink" title="NameNode格式化"></a>NameNode格式化</h2><h1 id="Hadoop服务启动停止和访问"><a href="#Hadoop服务启动停止和访问" class="headerlink" title="Hadoop服务启动停止和访问"></a>Hadoop服务启动停止和访问</h1><h2 id="服务启动"><a href="#服务启动" class="headerlink" title="服务启动"></a>服务启动</h2><ol><li>（节点1）启动HDFS<blockquote><p>start-dfs.sh</p></blockquote></li><li>（节点1）启动YARN<blockquote><p>start-yarn.sh</p></blockquote></li><li>（节点2）启动Resourcemanager<blockquote><p>yarn-daemon.sh start resourcemanager</p></blockquote></li><li>（节点3）启动日志服务器<blockquote><p>mr-jobhistory-daemon.sh start historyserver</p></blockquote></li></ol><blockquote><p>jps 命令查看各节点上的服务。</p></blockquote><h2 id="服务监控"><a href="#服务监控" class="headerlink" title="服务监控"></a>服务监控</h2><p>查看Web监控页面</p><ul><li>HDFS <ul><li><a href="http://cluster01.kwp.com:50070/" target="_blank" rel="noopener">http://cluster01.kwp.com:50070/</a> </li></ul></li><li>YARN<ul><li><a href="http://cluster02.kwp.com:8088/cluster" target="_blank" rel="noopener">http://cluster02.kwp.com:8088/cluster</a></li></ul></li></ul><blockquote><p>需要在Mac上配置hosts(/etc/hosts)，且需要开通节点上相应的端口访问权限，这样就可以在本机的浏览器进行访问。</p></blockquote><h2 id="服务终止"><a href="#服务终止" class="headerlink" title="服务终止"></a>服务终止</h2><ol><li><p>（节点3）终止日志服务器</p><blockquote><p>mr-jobhistory-daemon.sh stop historyserver</p></blockquote></li><li><p>（节点2）终止Resourcemanager</p><blockquote><p>yarn-daemon.sh stop resourcemanager</p></blockquote></li><li><p>（节点1）终止YARN</p><blockquote><p>stop-yarn.sh</p></blockquote></li><li><p>（节点1）终止HDFS</p><blockquote><p>stop-dfs.sh</p></blockquote></li></ol><hr>]]></content>
      
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> HDFS </tag>
            
            <tag> Yarn </tag>
            
            <tag> DataNode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>（二）Hadoop笔记：虚拟机CentOS环境准备</title>
      <link href="/2018/07/27/hadoop-learn-02/"/>
      <url>/2018/07/27/hadoop-learn-02/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux系统安装和环境配置"><a href="#Linux系统安装和环境配置" class="headerlink" title="Linux系统安装和环境配置"></a>Linux系统安装和环境配置</h1><p>一般来说，虚拟机加载CentOS镜像文件后，根据向导一步步安装mini版即可。</p><ul><li>建议：<ul><li>先安装配置好一个Linux，其他2个可直接克隆得到</li><li>root用户：root/root</li><li>操作系统名称：cluster01,cluster02,cluster03</li></ul></li></ul><h2 id="基础环境配置"><a href="#基础环境配置" class="headerlink" title="基础环境配置"></a>基础环境配置</h2><ol><li><p>主机名：便于节点之间的访问，修改主机名如下</p><pre class=" language-bash"><code class="language-bash">hostnamectl set-hostname cluster01.kwp.com</code></pre></li><li><p>网卡：联网必备，设置为开机自启动</p><pre class=" language-bash"><code class="language-bash"><span class="token function">vi</span> /etc/sysconfig/network-scripts/ifcfg-eth0ONBOOT<span class="token operator">=</span>no 改为 <span class="token function">yes</span><span class="token function">service</span> network restart 重启网络</code></pre></li><li><p>sshd：SSH服务，用于远程连接和访问Linux</p><pre class=" language-bash"><code class="language-bash"><span class="token function">vi</span> /etc/hosts.deny<span class="token function">vi</span> /etc/hosts.allow在 /etc/hosts.deny 和 /etc/hosts.allow 最后都加上一句 sshd:ALL ，保存<span class="token function">service</span> sshd restart 重启服务</code></pre></li><li><p>selinux设置：关闭安全机制</p><pre class=" language-bash"><code class="language-bash"><span class="token function">vi</span> /etc/selinux/config将 SELINUX<span class="token operator">=</span>enforcing 改成 SELINUX<span class="token operator">=</span>disabled，保存init 6 重启系统</code></pre></li><li><p>yum配置：便于联网下载软件</p><pre class=" language-bash"><code class="language-bash">安装下载工具yum -y <span class="token function">install</span> <span class="token function">wget</span>进入yum配置文件目录<span class="token function">cd</span> /etc/yum.repos.d/下载网易的源配置文件<span class="token punctuation">(</span>可直接去网站下载<span class="token punctuation">)</span><span class="token function">wget</span> http://mirrors.163.com/.help/CentOS6-Base-163.repo备份旧的配置文件<span class="token function">mv</span> CentOS-Base.repo CentOS-Base.repo.bak把下载的配置文件改名</code></pre></li></ol><p>l~~ 清理缓存<br>yum clean all<br>更新缓存<br>yum makecache<br>更新系统<br>yum update<br>安装常用安装包<br>yum -y install vim<br>yum -y install gcc gcc-c++ make</p><pre><code>6. 保持本地时间与internet一致&gt; 集群中各节点的时间一致是节点间正常通信的必要条件。- 安装时间同步工具：yum install -y ntpdate- 同步网络时间：ntpdate time.nist.gov&gt; 时间服务器：&gt; - time.nist.gov&gt; - time.nuri.net&gt; - 0.asia.pool.ntp.org&gt; - 1.asia.pool.ntp.org&gt; - 2.asia.pool.ntp.org&gt; - 3.asia.pool.ntp.org- 调整硬件时间：hwclock -w- 查看时间：  - date  - hwclock- 定时执行时间同步任务（在配置集群时才配置）  - crontab -e 来添加定时任务: 每隔一个小时同步一下internet```bash#* */1 * * * root ntpdatetime.nuri.net;hwclock -w </code></pre><h2 id="配置静态IP"><a href="#配置静态IP" class="headerlink" title="配置静态IP"></a>配置静态IP</h2><ol><li>修改 /etc/sysconfig/network-scripts/ 下的网络连接配置文件 ifcfg-ens33。</li><li>原始：<pre class=" language-bash"><code class="language-bash">TYPE<span class="token operator">=</span><span class="token string">"Ethernet"</span>PROXY_METHOD<span class="token operator">=</span><span class="token string">"none"</span>BROWSER_ONLY<span class="token operator">=</span><span class="token string">"no"</span>BOOTPROTO<span class="token operator">=</span><span class="token string">"dhcp"</span>DEFROUTE<span class="token operator">=</span><span class="token string">"yes"</span>IPV4_FAILURE_FATAL<span class="token operator">=</span><span class="token string">"no"</span>IPV6INIT<span class="token operator">=</span><span class="token string">"yes"</span>IPV6_AUTOCONF<span class="token operator">=</span><span class="token string">"yes"</span>IPV6_DEFROUTE<span class="token operator">=</span><span class="token string">"yes"</span>IPV6_FAILURE_FATAL<span class="token operator">=</span><span class="token string">"no"</span>IPV6_ADDR_GEN_MODE<span class="token operator">=</span><span class="token string">"stable-privacy"</span>NAME<span class="token operator">=</span><span class="token string">"ens33"</span>UUID<span class="token operator">=</span><span class="token string">"5bba20b4-ad83-452e-ac7d-076c1de0b193"</span>DEVICE<span class="token operator">=</span><span class="token string">"ens33"</span>ONBOOT<span class="token operator">=</span><span class="token string">"yes"</span></code></pre></li></ol><ul><li>修改后：<pre class=" language-bash"><code class="language-bash">TYPE<span class="token operator">=</span><span class="token string">"Ethernet"</span>PROXY_METHOD<span class="token operator">=</span><span class="token string">"none"</span>BROWSER_ONLY<span class="token operator">=</span><span class="token string">"no"</span></code></pre></li></ul><p>BOOTPROTO=”static”<br>IPADDR=192.168.32.141<br>PREFIXO=24<br>GATEWAY=192.168.32.2<br>DNS1=8.8.8.8<br>DNS2=8.8.4.4</p><p>DEFROUTE=”yes”<br>IPV4_FAILURE_FATAL=”no”<br>IPV6INIT=”yes”<br>IPV6_AUTOCONF=”yes”<br>IPV6_DEFROUTE=”yes”<br>IPV6_FAILURE_FATAL=”no”<br>IPV6_ADDR_GEN_MODE=”stable-privacy”<br>NAME=”ens33”<br>UUID=”5bba20b4-ad83-452e-ac7d-076c1de0b193”<br>DEVICE=”ens33”<br>ONBOOT=”yes”<br>ZONE=public</p><pre><code>2. 重启网络服务： service network restart3. 查看IP： ip addr## 配置免密码登陆1. 生成公钥私钥对:ssh-keygen&gt; 公钥私钥存放的目录：\~/.ssh/- 目录文件说明  - authorized\_keys: 存放远程免密登录的公钥,主要通过这个文件记录多台机器的公钥  - id\_rsa: 生成的私钥文件  - id\_rsa.pub: 生成的公钥文件  - know\_hosts: 已知的主机公钥清单- 如果希望ssh公钥生效需满足至少下面两个条件:  - .ssh目录的权限必须是700  - .ssh/authorized\_keys文件权限必须是6002. 公钥分发：ssh-copy-id -i root@cluster02.kwp.com&gt; 或者直接通过scp命令追加到对方文件中：```bashscp -p ~/.ssh/id_rsa.pub root@cluster02.kwp.com: /root/.ssh/authorized_keys</code></pre><ol start="3"><li>登陆：ssh <a href="mailto:root@cluster02.kwp.com" target="_blank" rel="noopener">root@cluster02.kwp.com</a></li></ol><h1 id="VMware-Tools安装"><a href="#VMware-Tools安装" class="headerlink" title="VMware Tools安装"></a>VMware Tools安装</h1><p>目的：本机设置共享文件夹，与Linux共享本地文件。</p><blockquote><p>注意虚拟机的版本和Linux的版本以及Linux内核的版本，实际安装过程中往往会因为版本的原因导致VMware Tools安装失败。</p></blockquote><h2 id="预先安装依赖："><a href="#预先安装依赖：" class="headerlink" title="预先安装依赖："></a>预先安装依赖：</h2><pre class=" language-bash"><code class="language-bash">yum <span class="token function">install</span> -y perlyum <span class="token function">install</span> -y net-toolsyum <span class="token function">install</span> -y gccyum <span class="token function">install</span> -y kernel-headers</code></pre><blockquote><p>上述升级后，可能在开机启动时产生多余的内核启动项，可通过下述方式删除多余启动项。</p><ul><li>查询正在使用的内核：uname -a</li><li>查询系统中全部的内核：rpm -q kernel</li><li>删除多余的内核 yum remove kernel-3.10.0-327.el7.x86_64 </li></ul></blockquote><h2 id="工具安装"><a href="#工具安装" class="headerlink" title="工具安装"></a>工具安装</h2><p>点击虚拟机的安装VMware Tools工具，而后自动挂载安装镜像。</p><blockquote><p>若发现没有挂载，可mount /dec/cdrom /media的方式手动挂载</p><ul><li>安装文件拷贝到个人目录下，执行安装，安装过程中默认回车。<pre class=" language-bash"><code class="language-bash"><span class="token function">tar</span> -xzf vmware-tools.tar.gz<span class="token function">cd</span> vmware-tools./vmware-tools.pl</code></pre>tar解压报错：归档中找不到tar: 由于前次错误，将以上次的错误状态退出。</li><li>解决办法：添加-C参数，例如 <ul><li>tar -zxvf ZendStudio-10.0.0-x86.tar.gz  -C  /home/bailin/</li></ul></li></ul></blockquote><ul><li>安装完毕后，重启Linux，在/mnt/hgfs目录下可以看到共享的文件夹。</li></ul><h2 id="可能出现的问题"><a href="#可能出现的问题" class="headerlink" title="可能出现的问题"></a>可能出现的问题</h2><p>Searching for a valid kernel header path… The path “” is not valid.</p><blockquote><p>这个问题根源在于虚拟机和Linux内核版本不兼容导致。</p></blockquote><ul><li>更新本机内核：yum update kernel -y</li><li>安装所需的内核及依赖：yum install kernel-headers kernel-devel gcc make -y</li><li>重启Linux： init 6</li><li>查看本机内核和更新的内核：<ul><li>uname -r</li><li>rpm -qa|grep –e kernel-headers –e kernel-devel</li></ul></li><li>重新执行VMware Tools安装：./vmware-tools.pl</li></ul><p>或者直接安装所需的kernel-headers and kernel-devel文件：</p><pre class=" language-bash"><code class="language-bash">yum <span class="token function">install</span> kernel-headers-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> -r<span class="token variable">)</span></span> kernel-devel-<span class="token variable"><span class="token variable">$(</span> <span class="token function">uname</span> -r<span class="token variable">)</span></span> -yyum <span class="token function">install</span> gcc <span class="token function">make</span> -y<span class="token function">uname</span> –r</code></pre><h1 id="附加"><a href="#附加" class="headerlink" title="附加"></a>附加</h1><ol><li>请提高vi编辑能力</li><li>请提高文本查找编辑能力，如sed,awk,grep</li><li>请熟悉make原理</li><li>请熟悉/etc下的各种配置文件</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> VMware Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>（一）Hadoop笔记：准备工作</title>
      <link href="/2018/07/27/hadoop-learn-01/"/>
      <url>/2018/07/27/hadoop-learn-01/</url>
      
        <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>MacOS 10.13.3 (17D47)</li><li>Java version 1.8.0_151</li><li>VMware Fusion 专业版 10.0.1</li><li>CentOS-7-x86_64-Minimal-1708</li><li>Kernel 3.10.0-0-693.21.1.e17.x86_64</li><li>hadoop-2.6.0</li></ul><h1 id="基本Linux命令"><a href="#基本Linux命令" class="headerlink" title="基本Linux命令"></a>基本Linux命令</h1><h2 id="系统查询"><a href="#系统查询" class="headerlink" title="系统查询"></a>系统查询</h2><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># ssh连接</span><span class="token function">ssh</span> root@cluster03.kwp.com<span class="token comment" spellcheck="true"># 查看主机名</span><span class="token function">hostname</span><span class="token comment" spellcheck="true"># 查看端口是否连通</span>telnet cluster03.kwp.com 8088<span class="token comment" spellcheck="true"># 查看端口当前使用情况</span>ss -ntl<span class="token comment" spellcheck="true"># 查看Linux网络状态</span><span class="token function">netstat</span> -anp<span class="token operator">|</span><span class="token function">grep</span> 8088<span class="token comment" spellcheck="true"># 查看操作系统的发行版本号内核</span><span class="token function">uname</span> -r<span class="token comment" spellcheck="true"># 查看定时任务</span><span class="token function">crontab</span> -l<span class="token comment" spellcheck="true"># 查看IP</span>ip addr<span class="token comment" spellcheck="true"># 查询系统中全部的内核</span>rpm -q kernel<span class="token comment" spellcheck="true"># 查看防火墙状态</span>firewall-cmd --state<span class="token comment" spellcheck="true"># 查看Hadoop安装路径</span><span class="token keyword">echo</span> <span class="token variable">$HADOOP_HOME</span><span class="token comment" spellcheck="true"># 查看目录下所有文件大小</span><span class="token function">du</span> -sh share/doc/<span class="token comment" spellcheck="true"># 获得所有软件包安装信息</span>rpm -qa <span class="token operator">|</span> <span class="token function">grep</span> telnet<span class="token comment" spellcheck="true"># 查看服务状态</span><span class="token function">service</span> ntpd status<span class="token comment" spellcheck="true"># 查看邮件</span><span class="token function">cat</span> /var/spool/mail/root<span class="token comment" spellcheck="true"># 查看当前时间</span><span class="token function">date</span> <span class="token string">"+%Y-%m-%d %H:%M:%S"</span><span class="token comment" spellcheck="true"># 显示所有本地IP地址+端口号</span><span class="token function">netstat</span> -an</code></pre><h2 id="目录和配置文件"><a href="#目录和配置文件" class="headerlink" title="目录和配置文件"></a>目录和配置文件</h2><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 系统参数设置</span>/etc<span class="token comment" spellcheck="true"># 用户级的程序目录</span>/opt<span class="token comment" spellcheck="true"># 系统运行时需改变的数据</span>/var<span class="token comment" spellcheck="true"># 应用程序存放目录</span>/usr <span class="token comment" spellcheck="true"># 用于加载各种文件系统</span>/mnt<span class="token comment" spellcheck="true"># 所有外设所在目录</span>/dev<span class="token comment" spellcheck="true"># 内存的映射，非真实目录</span>/proc<span class="token comment" spellcheck="true"># hosts主机硬伤文件</span><span class="token function">vi</span> /etc/hosts<span class="token comment" spellcheck="true"># 网卡IP设置</span><span class="token function">cd</span> /etc/sysconfig/network-scripts/<span class="token comment" spellcheck="true"># 本机SSH公钥</span><span class="token function">cat</span> ~/.ssh/id_rsa.pub<span class="token comment" spellcheck="true"># 超级管理员权限控制文件</span><span class="token function">cat</span> /etc/sudoers<span class="token comment" spellcheck="true"># 系统启动时自动mount的文件列表</span><span class="token function">cat</span> /etc/fstab<span class="token comment" spellcheck="true"># 主机名</span><span class="token function">cat</span> /etc/hostname</code></pre><h2 id="软件安装与更新"><a href="#软件安装与更新" class="headerlink" title="软件安装与更新"></a>软件安装与更新</h2><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 安装软件</span>yum -y <span class="token function">install</span> telnetyum -y <span class="token function">install</span> ntpdateyum -y <span class="token function">install</span> bash-completionyum -y <span class="token function">install</span> <span class="token function">make</span>yum -y <span class="token function">install</span> kernel-headers<span class="token comment" spellcheck="true"># 更新软件</span>yum -y update firewalldyum -y pdate kernel<span class="token comment" spellcheck="true"># 查看是否安装telnet</span>yum list <span class="token operator">|</span><span class="token function">grep</span> telnet</code></pre><h3 id="基本设置和操作"><a href="#基本设置和操作" class="headerlink" title="基本设置和操作"></a>基本设置和操作</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 修改主机名</span>hostnamectl set-hostname cluster01.kwp.com<span class="token comment" spellcheck="true"># 清除屏幕</span><span class="token function">clear</span><span class="token comment" spellcheck="true"># 挂载设备到文件夹</span><span class="token function">mount</span> /dev/cdrom /mnt/cdrom<span class="token comment" spellcheck="true"># 添加用户</span>adduser hadoop<span class="token comment" spellcheck="true"># 修改密码</span><span class="token function">passwd</span> hadoop<span class="token comment" spellcheck="true"># 删除用户</span><span class="token function">userdel</span> -r hadoop<span class="token comment" spellcheck="true"># 删除用户组</span><span class="token function">groupdel</span> hadoop<span class="token comment" spellcheck="true"># 优雅重启</span>init 6<span class="token comment" spellcheck="true"># 强制重启</span><span class="token function">reboot</span><span class="token comment" spellcheck="true"># 生成公钥私钥对</span>ssh-keygen<span class="token comment" spellcheck="true"># 将本机公钥追加到cluster03.kwp.com主机</span>ssh-copy-id -i cluster03.kwp.com<span class="token function">chmod</span> 600 authorized_keys<span class="token comment" spellcheck="true"># ntp同步网络时间</span>ntpdate time.nist.gov<span class="token comment" spellcheck="true"># 将系统时钟同步到硬件时钟</span>hwclock -w<span class="token comment" spellcheck="true"># 请求网页内容</span>curl cluster02:8088/cluster<span class="token comment" spellcheck="true"># 解压缩文件到指定目录</span><span class="token function">tar</span> -xvf hadoop-2.6.0.tar -C /opt/modules<span class="token comment" spellcheck="true"># 关闭防火墙</span>systemctl stop firewalld.service<span class="token comment" spellcheck="true"># 设置防火墙开启端口对外访问</span>firewall-cmd --zone<span class="token operator">=</span>public --add-port<span class="token operator">=</span>8082/tcp --permanent<span class="token comment" spellcheck="true"># 重新加载防火墙服务</span>firewall-cmd --zone<span class="token operator">=</span>public --reload<span class="token comment" spellcheck="true"># sshd服务重启</span><span class="token function">service</span> sshd restart<span class="token comment" spellcheck="true"># 网络重启</span><span class="token function">service</span> network restart<span class="token comment" spellcheck="true"># 局域网主机之间互传文件</span><span class="token function">scp</span> -r yarn-site.xml cluster02.kwp.com:/opt/modules/hadoop-2.6.0/etc/hadoop/</code></pre><h2 id="Hadoop命令"><a href="#Hadoop命令" class="headerlink" title="Hadoop命令"></a>Hadoop命令</h2><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># HDFS格式化命令</span>hdfs namenode –format<span class="token comment" spellcheck="true"># 执行mapreduce任务</span>bin/yarn jar share/hadoop/mapreduce/hadoop-mapreduce-examples-2.6.0.jar wordcount /input/wc.input /output<span class="token comment" spellcheck="true"># 启动Yarn任务</span>start-yarn.sh<span class="token comment" spellcheck="true"># 启动HDFS服务</span>start-dfs.sh<span class="token comment" spellcheck="true"># 停止resourcemanager服务</span>yarn-daemon.sh stop resourcemanager<span class="token comment" spellcheck="true"># 启动historyserver服务</span>mr-jobhistory-daemon.sh start historyserver</code></pre><h1 id="节点规划"><a href="#节点规划" class="headerlink" title="节点规划"></a>节点规划</h1><h2 id="节点服务列表"><a href="#节点服务列表" class="headerlink" title="节点服务列表"></a>节点服务列表</h2><table><thead><tr><th align="left">节点</th><th align="left">主机名</th><th align="left">服务项</th></tr></thead><tbody><tr><td align="left">节点1</td><td align="left">cluster01.kwp.com</td><td align="left">NameNode, DataNode,Nodemanager, HistoryServer</td></tr><tr><td align="left">节点2</td><td align="left">cluster02.kwp.com</td><td align="left">ResourceManager, DataNode,Nodemanager</td></tr><tr><td align="left">节点3</td><td align="left">cluster03.kwp.com</td><td align="left">SecondaryNameNode, DataNode,Nodemanager</td></tr></tbody></table><h2 id="本机虚拟机和共享目录"><a href="#本机虚拟机和共享目录" class="headerlink" title="本机虚拟机和共享目录"></a>本机虚拟机和共享目录</h2><p>路径：/Users/mac/Documents/Virtual Machines.localized</p><blockquote><p>CentOS:  CentOS-7-x86_64-Minimal-1708.ISO</p></blockquote><ul><li>cluster01.vmwarevm<ul><li>硬盘：20G </li><li>内存：1024MB</li><li>IP：192.168.32.141</li><li>连接类型：NAT</li><li>sharefolder (/mnt/hgfs/sharefolder) </li></ul></li><li>cluster02.vmwarevm<ul><li>硬盘：20G </li><li>内存：1024MB</li><li>IP：192.168.32.142</li><li>连接类型：NAT</li><li>sharefolder (/mnt/hgfs/sharefolder) </li></ul></li><li>cluster03.vmwarevm<ul><li>硬盘：20G </li><li>内存：1024MB</li><li>IP：192.168.32.143</li><li>连接类型：NAT</li><li>sharefolder (/mnt/hgfs/sharefolder) </li></ul></li></ul><h2 id="Hadoop和JDK安装目录"><a href="#Hadoop和JDK安装目录" class="headerlink" title="Hadoop和JDK安装目录"></a>Hadoop和JDK安装目录</h2><p>路径：/opt/modules/</p><ul><li>hadoop-2.6.0</li><li>jdk1.8.0_171</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> Linux </tag>
            
            <tag> Node </tag>
            
            <tag> MacOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么程序员写不出优雅的代码</title>
      <link href="/2018/07/24/why-not-beautiful-code/"/>
      <url>/2018/07/24/why-not-beautiful-code/</url>
      
        <content type="html"><![CDATA[<p>为什么程序员写不出优雅的代码呢？这个问题困惑了我好多年。似乎写代码的人很多，但留存久的代码却很少。</p><a id="more"></a><p>上大学时，起初还停留在只会某种或少许的几种语言，比如C语言，Matlab，当时每多学一门语言都觉得很自豪，但学语言，主要还是为了解决老师留下的作业，至于语言背后的逻辑，还停留在一知半解的程度。后来接触了51单片机，花了整个寒假用汇编写了一个多功能电子时钟，才切身体会到用底层语言实现功能是多么的痛苦，一千多行的代码，陷入到goto的跳来跳去中不能自拔，终于，果不如其然的放弃了汇编。后来又接触了Java，从面向过程到面向对象我花了整整一年的时间去适应，不过最后终于适应了，而且Java成了最热衷的一门语言。起初，为了玩好Java，开始接触了Web,入门了Html，CSS，XML，Javascript，Struts2，Hibernate，Spring以及Mysql等。为了搭一个网站，需要先去安装JDK，配置环境变量，安装Tomcat，安装Mysql；为了绘制网页素材，安装了Fireworks,Dreamweaver，Flash,当时号称网页三剑客；为了方便的存取数据，学习了SQL的语法，JDBC的基本操作，JavaBean，DAO的封装；为了处理一个个客户端的请求，学习了Servlet，Struts2等。</p><p>总之，还没有搭建起来一个像样的网站，就已经陷入到各种所谓的开发工具和依赖包里了。</p><p>不得不吐槽的是，在这些学习的过程中，笔记本里的软件是装了又卸，卸了又装，最后终于不堪重负在研三的时候再也开不不了机。</p><p>我们真的需要掌握那么多的工具吗？如果是，又将如何写好我们的代码呢？</p><p>好的代码，需要有节俭意识。不要随意挥霍你的内存，你的各种可用的资源，这是我在写汇编时最深刻的教训。内存是稀缺资源，CPU也是，IO也是，一个51单片机只有非常有限的IO，有限的时钟频率，却要实现时分复用，以欺骗性的方式实现人们喜爱的“并发执行”。又要能显示时间，又要有闹钟，又要带跑马灯，还要能播放音乐，这是多么的不容易。时隔已多年，现如今软硬件技术迅猛发展，各种高级语言大行其道，计算机资源看上去取之不尽用之不竭，但本质上底层还是跟内存、CPU、IO等资源打交道，可能短期内我们的代码还可以顺畅的跑起来，但久而久之，程序的性能自然就受到资源的制约了，到那时，若想再次对原有对代码重构，难度可想而知。所以说，只要开始写代码，就要惦记着可用的资源。是资源，一定是稀缺的。</p><p>好的代码，需要写代码的人在有限的时间里勤于思考和组织。很多时候，写代码只是为了完成当下的任务，着眼于当下，鲜有人想着哪些地方可能是扩展点，哪些地方很可能会被重构，当然，这也怨不得写代码的人，因为时间总是有限的，写代码本身是一件无穷无尽的工作，一味的追求完美，那么代码永远也写不完。受时间的制约，在有限的时间里去想那么多本身就不太现实，那为什么有的人能做到呢？意识，一次次踩坑后的意识。好的代码一定需要经得起实际的检验，一定需要一个不断完善的过程。有了这些过程，在过程中不断思考，积累，并认识到如何组织我们的代码，不断的重构，不断的改进。为什么要强调代码组织呢？个人觉得代码本身也是有结构的有规律的，这种结果性和规律性被人们美其名曰设计模式或者数据结构等说法，当然更重要的在于增强我们代码的扩展性健壮性和可读性方面。扩展性是基于空间的考虑，旨在可以从代码的不同位置进行功能的扩展，从而使得代码的功能可以随着代码量呈近线性增长；健壮性是基于时间的考虑，通俗的说，要求代码不仅现在可用，而且在很长的一段时间里都可用；可读性是基于语言本身的考虑，有效沟通是语言最重要的一个用途，同样，代码也是由编程语言写出来的，那么不仅得让计算机可读，也得让未来的自己可读，让周围的他人可读，否则，又如何与他们进行沟通呢？</p><p>技术可以老去，思想永恒。</p><p>为什么程序员写不出优秀的代码呢？直到工作后才发现，大多从事IT的人，其实真正花时间写代码的并不多，甚至很少。很自然的一个问题，写代码有什么用呢，写代码并不能在有限的时间内获取较大的产出和回报，这个跟企业的投入产出要求是不相符的，因此由于项目的需要，更多的是完成，即实现当下的功能即可，在此背景下，写代码就不再追求什么优雅了，“短平快”就可以了。于是乎，IT从此变得廉价，变成了工具，IT人自身的价值也大打折扣。这是个奇怪的现象，尤其是当前全行业都近乎被信息技术颠覆的时代，程序员虽然看似工资高，但一直从事着底层搬砖的苦活儿。为什么呢？这是个错误，甚至是个死循环。试想一下，程序员写了尚且可用的代码，然后很快又变得难用或者不可用，然后又开始启动新的项目开发新的尚且可用的代码，然后如此循环下去，一次次的迭代，一次次的出不来。这不是代码，这是灾难，是一个个点焦油坑。</p><p>无代码，不优雅。追求极致代码是一种信仰。勿忘初心。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Sublime+Hexo 优雅写博客</title>
      <link href="/2018/07/16/sublime-hexo-write-blog/"/>
      <url>/2018/07/16/sublime-hexo-write-blog/</url>
      
        <content type="html"><![CDATA[<h3 id="实现思路和预期目标"><a href="#实现思路和预期目标" class="headerlink" title="实现思路和预期目标"></a>实现思路和预期目标</h3><ol><li>“所见即所得”，打开Sublime，就可以发布博客；</li><li>”专业于博客内容“，不用关心Hexo命令的使用以及Hexo的框架代码；</li><li>”简洁唯美“，不用关心各种配置。</li></ol><h3 id="新建博客流程"><a href="#新建博客流程" class="headerlink" title="新建博客流程"></a>新建博客流程</h3><ol><li>Tools工具栏里选择发布博客，自动生成并打开博客内容模版；</li><li>填写博客元信息，并重命名博客；</li><li>完成Markdown格式的博客内容；</li><li>Tools工具栏启动本地浏览或直接发布到远程仓库。</li></ol><h3 id="Sublime-新建博客命令"><a href="#Sublime-新建博客命令" class="headerlink" title="Sublime 新建博客命令"></a>Sublime 新建博客命令</h3><p>命令创建的路径 Sublime &gt;&gt; Tools &gt;&gt; Build System &gt;&gt; New Build System…，新建以下内容：</p><pre><code>{    &quot;shell_cmd&quot;: &quot;title=\\$(date +%H%M%S) &amp;&amp; hexo new \\$title &amp;&amp; subl /Users/mac/Documents/blog/source/_posts/\\$title.md&quot;,    &quot;working_dir&quot;: &quot;/Users/mac/Documents/blog/&quot;,    &quot;path&quot;: &quot;/Applications/Sublime Text.app/Contents/SharedSupport/bin:$PATH&quot;}</code></pre><p>另存为 hexo-new-blog.sublime-build</p><p>默认博客文件和文件名为title.md，需要通过下面所设的快捷键F2进行重命名。</p><blockquote><p>注意：需要结合自己本地的blog目录和Sublime安装目录进行配置shell_cmd和path。</p></blockquote><h3 id="Sublime-本地Hexo服务器启动命令"><a href="#Sublime-本地Hexo服务器启动命令" class="headerlink" title="Sublime 本地Hexo服务器启动命令"></a>Sublime 本地Hexo服务器启动命令</h3><p>命令创建的路径 Sublime &gt;&gt; Tools &gt;&gt; Build System &gt;&gt; New Build System…，新建以下内容：</p><pre><code>{    &quot;shell_cmd&quot;: &quot;ps -ef|grep hexo|grep -v grep|awk &#39;{print \&quot;kill -9 \&quot;\\$2}&#39;|sh &amp;&amp; hexo clean &amp;&amp; hexo s&quot;,    &quot;working_dir&quot;: &quot;/Users/mac/Documents/blog/&quot;}</code></pre><p>另存为 hexo-start.sublime-build</p><h3 id="Sublime-发布到博客网站命令"><a href="#Sublime-发布到博客网站命令" class="headerlink" title="Sublime 发布到博客网站命令"></a>Sublime 发布到博客网站命令</h3><p>命令创建的路径 Sublime&gt;&gt;Tools&gt;&gt;Build System&gt;&gt;New Build System…，新建以下内容：</p><pre><code>{    &quot;shell_cmd&quot;: &quot;hexo clean&amp;&amp;hexo g -d&quot;,    &quot;working_dir&quot;: &quot;/Users/mac/Documents/blog/&quot;}</code></pre><p>另存为 hexo-deploy.sublime-build</p><h3 id="Sublime-重命名快捷键"><a href="#Sublime-重命名快捷键" class="headerlink" title="Sublime 重命名快捷键"></a>Sublime 重命名快捷键</h3><ol><li>新建命令文件</li></ol><p>打开包目录：Sublime &gt;&gt; Preferences &gt;&gt; Browser Packages…</p><pre class=" language-Python"><code class="language-Python"># rename_file.pyimport sublimeimport sublime_pluginimport osimport functoolsclass RenameFileCommand(sublime_plugin.WindowCommand):    def run(self, paths):        if paths[0] == "$file":            paths[0] = self.window.active_view().file_name()        branch, leaf = os.path.split(paths[0])        v = self.window.show_input_panel("New Name:", leaf, functools.partial(self.on_done, paths[0], branch), None, None)        name, ext = os.path.splitext(leaf)        v.sel().clear()        v.sel().add(sublime.Region(0, len(name)))    def on_done(self, old, branch, leaf):        new = os.path.join(branch, leaf)        try:            os.rename(old, new)            v = self.window.find_open_file(old)            if v:                v.retarget(new)        except:            sublime.status_message("Unable to rename")    def is_visible(self, paths):        return len(paths) == 1</code></pre><blockquote><p>感谢 <a href="https://superuser.com/questions/683766/renaming-open-files-in-sublime-text-2/684114#684114" target="_blank" rel="noopener">https://superuser.com/questions/683766/renaming-open-files-in-sublime-text-2/684114#684114</a></p></blockquote><ol start="2"><li>注册快捷键</li></ol><p>打开快捷键设置 Sublime &gt;&gt; Preferences &gt;&gt; key Bindings,添加下面配置：</p><pre><code>[    {         &quot;keys&quot;: [&quot;f2&quot;], &quot;command&quot;: &quot;rename_file&quot;, &quot;args&quot;: { &quot;paths&quot;: [&quot;$file&quot;] }     }]</code></pre><blockquote><p>也可使用命令来控制文件的重命名和删除，Command-Shift-P &gt;&gt; Package Control: Install Package &gt;&gt; File Rename 和 Delete Current File。</p></blockquote><h3 id="Markdown插件安装"><a href="#Markdown插件安装" class="headerlink" title="Markdown插件安装"></a>Markdown插件安装</h3><ol><li>菜单栏：Preferences &gt;&gt; Package Control &gt;&gt; Package Control:Install Package</li></ol><blockquote><p>Command-Shift-P 打开Package Control,Install Package</p></blockquote><p>搜索并安装 Markdown Editing即可。</p><ol start="2"><li>如果喜欢实时预览，可以同时安装 MarkdownLivePreview。</li></ol><blockquote><p>默认MarkdownLivePreview不开启实时预览，可设置<br>Preferences → Package Settings → MarkdownLivePreview → Setting，打开后将左边default的设置代码复制到右边User栏，找到”markdown_live_preview_on_open”:false,把false改为true</p></blockquote><p>Markdown Editing本身已很好用，不建议再次安装MarkdownLivePreview。</p><h3 id="Sublime-自动保存"><a href="#Sublime-自动保存" class="headerlink" title="Sublime 自动保存"></a>Sublime 自动保存</h3><ol><li>Ctrl+Shift+p调出命令面板</li><li>找到Preferences:Settings - Use</li><li>自定义设置失去焦点自动保存 “save_on_focus_lost”: true；</li></ol><blockquote><p>感谢 <a href="https://www.cnblogs.com/itbull/p/6182460.html" target="_blank" rel="noopener">https://www.cnblogs.com/itbull/p/6182460.html</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Sublime </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown+Hexo 内容呈现</title>
      <link href="/2018/07/13/markdown-hexo-content-presentation/"/>
      <url>/2018/07/13/markdown-hexo-content-presentation/</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo和Next主题自带标签"><a href="#Hexo和Next主题自带标签" class="headerlink" title="Hexo和Next主题自带标签"></a>Hexo和Next主题自带标签</h2><ol><li><p>内容居中</p><pre><code>{% cq %}    Your content.{% endcq %}</code></pre></li><li><p>引用</p><pre><code>{% blockquote David Levithan, Wide Awake %}    Do not just seek happiness for yourself. {% endblockquote %}</code></pre></li><li><p>插入代码块</p><pre><code>{% codeblock %}    alert('Hello World!');{% endcodeblock %}</code></pre></li></ol><a id="more"></a><h2 id="Markdown标签"><a href="#Markdown标签" class="headerlink" title="Markdown标签"></a>Markdown标签</h2><p>新建md文稿，先通过分级标题形式建立目录结构，然后通过列表形式填充各级子目录内容。</p><ol><li><p>标题</p><pre><code># 这是一级标题## 这是二级标题### 这是三级标题#### 这是四级标题##### 这是五级标题###### 这是六级标题</code></pre></li><li><p>字体<br>```</p></li></ol><p><em>这是倾斜的文字</em><br><strong>这是加粗的文字</strong><br><strong><em>这是斜体加粗的文字</em></strong></p><pre><code>3. 分割线和引用</code></pre><h2 id="分隔符：3个或3个以上的短横线或星号"><a href="#分隔符：3个或3个以上的短横线或星号" class="headerlink" title="分隔符：3个或3个以上的短横线或星号"></a>分隔符：3个或3个以上的短横线或星号</h2><hr><hr><hr><blockquote><p>引用</p><pre><code></code></pre></blockquote><ol start="4"><li><p>链接</p><pre><code>![图片名](url “title”)[超链接名](url &quot;title&quot;)</code></pre><p>建议以插入网络链接的方式插入图片。</p></li><li><p>列表<br>```</p></li></ol><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>列表内容<pre><code>列表嵌套：上一级和下一级之间敲三个空格即可。</code></pre></li></ul><ol start="6"><li>表格<pre><code>|标题1|标题2|标题3||:---|:---:|---:||居左测试文本|居中测试文本|居右测试文本|</code></pre></li></ol><pre><code>未完待续：如何画流程图？</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git For Coder</title>
      <link href="/2018/07/13/git-for-coder/"/>
      <url>/2018/07/13/git-for-coder/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Git，为开发而生，是Linus Torvalds的又一个伟大的作品。</p></blockquote><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ol><li>工作空间：可以是一个文件夹，一个工程，抑或是一个项目，是用于生产代码的地方。</li><li>暂存区：用于记录哪些文件需要加入Git的版本跟踪。</li><li>本地仓库：记录了本地工作空间所有的修改变动，或者说是历史版本。</li><li>远程仓库：一个用于公共访问的空间，用于集中存放需要共享的分支。</li></ol><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><pre><code>全局配置git config --global user.email &quot;you@example.com&quot;git config --global user.name &quot;Your Name&quot;设置当前本地分支跟踪远程分支git branch --set-upstream-to=origin/devgit branch -u origin/dev</code></pre><h2 id="代码开发"><a href="#代码开发" class="headerlink" title="代码开发"></a>代码开发</h2><blockquote><p>面向开发人员，专注于本地管理自己的代码。</p></blockquote><pre><code>从远程拉分支到本地git clone -b develop url建本地开发分支并切换git checkout -b feature/XXX查看工作状态git status添加文件到暂存区git add .提交git commit -a合并develop到当前分支git merge origin/develop查看提交日志git log --graph --oneline推送到远程git push -u origin master</code></pre><hr><h2 id="撤销和回退"><a href="#撤销和回退" class="headerlink" title="撤销和回退"></a>撤销和回退</h2><pre><code>回撤到上一个版本git reset HEAD^清空暂存和未暂存的更改 ，仓库重置到目标提交git reset --hard [commit]保留暂存和未暂存的更改，仓库重置到目标提交git reset --soft [commit]生成一个新的提交来撤销某次提交，不会影响此次提交git revert [commit]从缓存区中拉取版本还原，如果没有则到版本库中拉取还原git checkout -- &lt;file&gt;去除本地仓库中文件git rm -r --cached filename 丢弃工作区修改git checkout --file</code></pre><h2 id="代码维护"><a href="#代码维护" class="headerlink" title="代码维护"></a>代码维护</h2><blockquote><p>面向代码维护者，专注于分支和版本管理。</p></blockquote><pre><code>查看远程分支git branch -r拉取远程分支git feitch合并分支git merge删除分支git push origin --delete hotfix/YYY新建标签git tag -a tagName -m &#39;my tag&#39;同步标签到远程git push origin tagName版本比较git diff commit_id1 commit_id2 -- file查看操作记录git reflog</code></pre><h2 id="忽略"><a href="#忽略" class="headerlink" title="忽略"></a>忽略</h2><blockquote><p>.gitignore只能忽略那些原来没有被track的文件<br>过滤条件</p></blockquote><pre><code>#           此为注释 – 将被 Git 忽略*.a         忽略所有 .a 结尾的文件!lib.a      但 lib.a 除外/TODO       仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODObuild/      忽略 build/ 目录下的所有文件doc/*.txt   会忽略 doc/notes.txt 但不包括 doc/server/arch.txt</code></pre><h2 id="趣味"><a href="#趣味" class="headerlink" title="趣味"></a>趣味</h2><p><a href="https://learngitbranching.js.org/?locale=zh_CN" target="_blank" rel="noopener">https://learngitbranching.js.org/?locale=zh_CN</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Breeze blows</title>
      <link href="/2018/07/12/breeze-blows/"/>
      <url>/2018/07/12/breeze-blows/</url>
      
        <content type="html"><![CDATA[<p>Codding is fun.<br>Computer has accompanied us for many years.<br>Friends, in this time of happiness, joy and good will accompany to you! </p><blockquote><p>It is the kind of mind that can see things as they are, which step by step and in a flash can realize the original nature of everything. Beginner’s mind is Zen practice in action. It is the mind that is innocent of preconceptions and expectations, judgements and prejudices. Think of beginner’s mind as the mind that faces life like a small child, full of curiosity and wonder and amazement.</p><footer><strong>Steve Jobs</strong></footer></blockquote><p>There’s a phrase in Buddhism, ‘Beginner’s mind.’ It’s wonderful to have a beginner’s mind.</p><p>The only way to do great work is to love what you do. If you haven’t found it yet, keep looking. Don’t settle. As with all matters of the heart, you’ll know when you find it.</p><blockquote><p>Have the courage to follow your heart and intuition. They somehow already know what you truly want to become. Everything else is secondary.  </p><footer><strong>Steve Jobs</strong></footer></blockquote><p>If you have a drream, you would never stop here.</p><hr><p>Created by Quippy on 2018-07-12.</p>]]></content>
      
      
      
        <tags>
            
            <tag> code </tag>
            
            <tag> idea </tag>
            
            <tag> joy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Start with Hexo</title>
      <link href="/2018/07/12/start-with-hexo/"/>
      <url>/2018/07/12/start-with-hexo/</url>
      
        <content type="html"><![CDATA[<blockquote><p>More info from <a href="https://hexo.io/docs/" target="_blank" rel="noopener">https://hexo.io/docs/</a></p></blockquote><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-Bash"><code class="language-Bash">$ hexo new "My New Post"</code></pre><a id="more"></a><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-Bash"><code class="language-Bash">$ hexo serverOR$ hexo s</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-Bash"><code class="language-Bash">$ hexo generateOR$ hexo g</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-Bash"><code class="language-Bash">$ hexo deployOR $ hexo d</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><h3 id="Clean-cache-and-output"><a href="#Clean-cache-and-output" class="headerlink" title="Clean cache and output"></a>Clean cache and output</h3><pre class=" language-Bash"><code class="language-Bash">$ hexo clean</code></pre><p>Cleans the cache file (db.json) and generated files (public).</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
